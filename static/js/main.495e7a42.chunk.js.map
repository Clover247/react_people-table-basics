{"version":3,"sources":["components/Loader/Navbar.tsx","App.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/Loader/Loader.tsx","pages/PeoplePage.tsx","index.tsx"],"names":["Navbar","isActiveClass","isActive","cn","className","role","to","App","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","sex","name","PeopleTable","people","selectedSlug","useParams","getParent","find","undefined","map","mother","motherName","father","fatherName","href","born","died","Loader","PeoplePage","content","useState","peopleFromServer","setPeopleFromServer","error","setError","isLoading","setIsLoading","useEffect","catch","finally","length","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.495e7a42.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar: React.FC = () => {\n  const isActiveClass = ({ isActive }: { isActive: boolean }) => cn(\n    'navbar-item',\n    { 'has-background-grey-lighter': isActive },\n  );\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={isActiveClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={isActiveClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\n\nimport { Navbar } from './components/Loader/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <Outlet />\n    </main>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Person } from '../types';\n\ntype Props = {\n  person?: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`${person?.slug}`}\n      className={cn({\n        'has-text-danger': person?.sex === 'f',\n      })}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\n\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { selectedSlug } = useParams();\n\n  const getParent = (name: string | null): Person | undefined => {\n    return name ? people.find(person => person.name === name) : undefined;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = getParent(person.motherName);\n          const father = getParent(person.fatherName);\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={cn(\n                { 'has-background-warning': person.slug === selectedSlug },\n              )}\n            >\n              <td>\n                <a href={`#/people/${person.slug}`}>\n                  {person.name}\n                </a>\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {mother\n                  ? <PersonLink person={mother} />\n                  : person.motherName || '-'}\n              </td>\n              <td>\n                {father\n                  ? <PersonLink person={father} />\n                  : person.fatherName || '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\n\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Loader } from '../components/Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [peopleFromServer, setPeopleFromServer] = useState<Person[]>([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getPeople()\n      .then((people) => setPeopleFromServer(people))\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  let content;\n\n  if (error) {\n    content = (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  } else if (isLoading) {\n    content = <Loader />;\n  } else if (peopleFromServer.length === 0) {\n    content = (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  } else {\n    content = <PeopleTable people={peopleFromServer} />;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './pages/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":selectedSlug?\" />\n          </Route>\n          <Route\n            path=\"*\"\n            element={\n              <h1 className=\"title\">Page not found</h1>\n            }\n          />\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}